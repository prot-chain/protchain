version: '3.8'

services:
  # BioAPI Service
  bioapi:
    image: isongjosiah/protchain:bioapi
    container_name: bioapi
    ports:
      - "80:80"
    environment:
      - BIOAPI_ENV=local
    networks:
      - protchain-network

  # Protchain API
  protchain-api:
    image: isongjosiah/protchain:protchain-api
    container_name: protchain-api
    ports:
      - "8002:8002"
    environment:
      - API_ENV=local
      - BLOCKCHAIN_URL=peer0.org1.example.com:7051
      - DATABASE_URL=postgres://postgres:mysecretpassword@postgresql:5432/protchain?sslmode=disable
      - BIO_API_URL=http://bioapi:80/api/v1
      - IPFS_ADDRESS=/dns/ipfs/tcp/5001
      - JWT_KEY=test
      - CHANNEL=mychannel
      - CHAIN_CODE=proteomic
      - PEER_ENDPOINT=peer0.org1.example.com:7051
      - MSPID=Org1MSP
      - CRYPTO_PATH=/crypto/org1
      - HTTP_PORT=8002
    volumes:
      - ./fabric_setup/test-network/organizations/peerOrganizations/org1.example.com:/crypto/org1
    depends_on:
      - bioapi
      - postgresql
    networks:
      - protchain-network
      - fabric_test

  # PostgreSQL Service
  postgresql:
    image: postgres:15
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: protchain
    networks:
      - protchain-network
  # IPFS Kubo (go-ipfs)
  ipfs:
    image: ipfs/kubo:latest
    container_name: ipfs
    ports:
      - "4001:4001" # Swarm port
      - "5001:5001" # API port
      - "8080:8080" # Gateway port
    environment:
      - IPFS_PROFILE=server
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - protchain-network

networks:
  protchain-network:
    driver: bridge
  fabric_test:
    external: true

volumes:
  ipfs_data:
    driver: local
